# ServiceMonitor for Prometheus scraping
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: pinky-promise-metrics
  namespace: production
  labels:
    app: pinky-promise
spec:
  selector:
    matchLabels:
      app: pinky-promise-backend
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
---
# Application-specific alerts
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: pinky-promise-alerts
  namespace: production
  labels:
    app: pinky-promise
spec:
  groups:
  - name: pinky-promise.rules
    rules:
    - alert: HighErrorRate
      expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "High error rate detected"
        description: "Error rate is {{ $value }} errors per second"
    
    - alert: HighResponseTime
      expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High response time detected"
        description: "95th percentile response time is {{ $value }} seconds"
    
    - alert: PodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "Pod is crash looping"
        description: "Pod {{ $labels.pod }} is restarting frequently"
    
    - alert: DatabaseConnectionIssues
      expr: up{job="postgres"} == 0
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: "Database connection issues"
        description: "Cannot connect to PostgreSQL database"
---
# Custom metrics endpoint for backend
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: production
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    scrape_configs:
      - job_name: 'pinky-promise-backend'
        static_configs:
          - targets: ['pinky-promise-backend-service:80']
        metrics_path: /metrics
        scrape_interval: 30s
      
      - job_name: 'pinky-promise-frontend'
        static_configs:
          - targets: ['pinky-promise-frontend-service:80']
        metrics_path: /nginx_status
        scrape_interval: 30s
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - production
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
---
# Grafana Dashboard ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: pinky-promise-dashboard
  namespace: production
  labels:
    grafana_dashboard: "1"
data:
  pinky-promise.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Pinky Promise Application Dashboard",
        "tags": ["pinky-promise"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "HTTP Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total[5m])",
                "legendFormat": "{{method}} {{status}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, rate(http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "50th percentile"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Pod Status",
            "type": "stat",
            "targets": [
              {
                "expr": "kube_pod_status_ready{namespace=\"production\"}",
                "legendFormat": "{{pod}}"
              }
            ],
            "gridPos": {"h": 4, "w": 24, "x": 0, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }

